unit Rest.Config;

interface

Uses
  System.IniFiles,
  System.SysUtils;

Type
  TMethods = (mAll, mGet, mPost, mPut, mDelete);

var
  AppConServer,
    AppConPorta,
    AppConDataBase,
    AppConUsername,
    AppConPassword,
    RESTPortHTTP,
    RESTPortSSL,
    AppDirCertFile,
    AppProtocolo:
    String;

Procedure SaveConfig();
Procedure LoardConfig();

implementation


Procedure LoardConfig();
begin
  with TIniFile.Create(ChangeFileExt(ParamStr(0), '.ini')) do
    Try
      AppConServer := ReadString('conexao', 'Server', '127.0.0.1');
      AppConPorta := ReadString('conexao', 'porta', '5243');
      AppConDataBase := ReadString('conexao', 'DataBase', 'pm_dattasystem');
      AppConUsername := ReadString('conexao', 'Username', 'postgres');
      AppConPassword := ReadString('conexao', 'Password', 'ds786214');

      RESTPortHTTP := ReadString('REST', 'PortHTTP', '80');
      RESTPortSSL := ReadString('REST', 'PortSSL', '443');
      AppDirCertFile := ReadString('REST', 'DirCertFile', ExtractFilePath(ParamStr(0)) + 'ssl');
      AppProtocolo := ReadString('REST', 'Protocolo', 'HTTP');
    Finally
      Free;
    End;

end;

Procedure SaveConfig();
begin

  with TIniFile.Create(ChangeFileExt(ParamStr(0), '.ini')) do
    Try
      WriteString('conexao', 'Server', AppConServer);
      WriteString('conexao', 'porta', AppConPorta);
      WriteString('conexao', 'DataBase', AppConDataBase);
      WriteString('conexao', 'Username', AppConUsername);
      WriteString('conexao', 'Password', AppConPassword);

      WriteString('REST', 'PortHTTP', RESTPortHTTP);
      WriteString('REST', 'PortSSL', RESTPortSSL);
      WriteString('REST', 'DirCertFile', AppDirCertFile);
      WriteString('REST', 'Protocolo', AppProtocolo);


    Finally
      Free;
    End;

end;

Initialization

LoardConfig();

Finalization

//

end.
